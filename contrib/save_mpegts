#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable -name save_mpegts -pa ebin -pa lib -pa deps -env ERL_LIBS "lib:deps"

-define(TIMEOUT, 4000).
-define(COUNTER, 100).
-define(D(X), io:format("DEBUG:~p ~p~n",[?LINE, X])).

main([URL, FileName]) ->
  code:add_pathz("lib/flv/ebin"),
  code:add_pathz("lib/mpegts/ebin"),
  code:add_pathz("lib/erlyvideo/ebin"),
  code:add_pathz("lib/h264/ebin"),
  start_saver(URL, FileName);
main(_) ->
  io:format("http://[URL] file.flv ~n").


-record(saver, {
  url,
  filename,
  reader,
  writer,
  request
}).
  
start_saver(URL, FileName) ->
  ok = inets:start(),
  {ok, Writer} = flv_writer:start_link(FileName),
  erlang:monitor(process, Writer),
  {ok, Reader} = mpegts_reader:start_link(Writer),
  erlang:monitor(process, Reader),
  {ok, RequestId} = httpc:request(get, {URL, []}, [], [{sync, false}, {stream, self}]),
  ?D({"Reply", RequestId}),
  loop(#saver{url = URL, filename = FileName, writer = Writer, reader = Reader, request = RequestId}).
  
  
loop(#saver{request = Request, reader = MPEGTS} = Saver) ->
  receive
    {http, {Request, stream_start, _Headers}} ->
      loop(Saver);
    {http, {Request, stream, Bin}} ->
      MPEGTS ! {data, Bin},
      loop(Saver);
    Message ->
      ?D(Message),
      loop(Saver)
  end.