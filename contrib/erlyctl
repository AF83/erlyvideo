#!/bin/sh

# 
# -define(TIMEOUT, 4000).
# -define(COUNTER, 100).
# -define(D(X), io:format("DEBUG:~p ~p~n",[?LINE, X])).
# 
# main(["reload", Node]) ->
#   rpc:call(list_to_atom(Node), ems, reconfigure, []);
# main(["restart", Node]) ->
#   rpc:call(list_to_atom(Node), ems, restart, []);
# main(["clients", Hostname, Node]) ->
#   Host = list_to_atom(Hostname),
#   Entries = rpc:call(list_to_atom(Node), media_provider, entries, [Host]),
#   io:format("~p~n", [Entries]);
# main(_) ->
#   io:format("Commands:~n  reload Node~n  restart Node~n  clients Hostname Node~n").
# 
#   
  

NODE=ems
HOST=localhost
MNESIA_DATA=mnesia-data

# Define ejabberd environment
ERL="erl +A 4 +K true"

start()
{
	ERL_LIBS=deps:lib:plugins:.. $ERL -noinput -detached \
	-sasl sasl_error_logger 'false' \
  -kernel error_logger 'false' \
	-sasl error_logger_mf_dir '"log/report"' \
	-sasl error_logger_mf_maxbytes '100000' \
	-sasl error_logger_mf_maxfiles '255' \
	-sasl utc_log 'true' \
	-boot start_sasl \
	-s erlyvideo \
	-sname $NODE@$HOST
}

run()
{
	ERL_LIBS=deps:lib:plugins:.. $ERL
	-kernel error_logger 'false' \
	-sasl sasl_error_logger 'tty' \
	-sasl errlog_type 'error' \
	-boot start_sasl \
	-s erlyvideo \
	-sname $NODE@$HOST
	exit
}

shell()
{
    $ERL \
      -sname debug$NODE@$HOST \
      -pa ebin \
      -hidden \
      -remsh $NODE@$HOST
}

ctl()
{
    $ERL \
      -sname ctl$NODE@$HOST \
      -pa ebin \
      -noinput \
      -hidden \
      -s erlyvideo_ctl -extra $NODE@$HOST $@
}

usage()
{
    echo <<-EOF
erlyctl run (in foreground)
erlyctl start (in background)
erlyctl shell (remote shell)
erlyctl stop (shutdown server)
erlyctl reload (validate and reload config file)
erlyctl restart (reload config file and restart whole server)
EOF
    exit
}

[ $# -lt 1 ] && usage

case $1 in
    start) start;;
    run) run;;
    shell) shell;;
    *) ctl $@;;
esac
